crimeCat <- df
crimeCat <- subset(crimeCat, crimeCat$SUB_CATE != '')
head(crimeCat)
group <- unique(crimeCat$SUB_CATE)
df_group <- data.frame(Category = group, Index = c(1:length(group)))
df_group
mapCrime <- read.csv('dataset/Crime/group_crime.csv', header = T, stringsAsFactors = F)
for(i in c(1:ncol(mapCrime))) {
mapCrime[,i] <- ifelse(is.na(mapCrime[,i]), 0, mapCrime[,i])
}
df_group$Category <- as.character(levels(unlist(df_group$Category)))[unlist(df_group$Category)]
crimeCat$Crime.SubcategoryIndex <- factor(crimeCat$SUB_CATE,
levels=df_group$Category, labels=df_group$Index)
crimeCat$Category <-
ifelse(crimeCat[,5] %in% mapCrime[,2], 'Murder',
ifelse(crimeCat[,5] %in% mapCrime[,3], 'Rape',
ifelse(crimeCat[,5] %in% mapCrime[,4], 'Robbery',
ifelse(crimeCat[,5] %in% mapCrime[,5], 'Aggravated',
ifelse(crimeCat[,5] %in% mapCrime[,6], 'Burglary',
ifelse(crimeCat[,5] %in% mapCrime[,7], 'LarcenyTheft',
ifelse(crimeCat[,5] %in% mapCrime[,8], 'VehicleTheft', 'Arson')))))))
crimeCat <- crimeCat[,-5]
violent <- c('Murder', 'Rape', 'Robbery', 'Aggravated')
crimeCat$Violent <- ifelse(crimeCat[,5] %in% violent, T, F)
vioTable <- table(crimeCat$Violent)
## True : Violent, False : Property
# FALSE   TRUE
# 426579  96750
v_table <- data.frame(c(vioTable))
tot <- sum(v_table[,1])
per_table <- rbind(round(v_table[2,1]/tot, 4) * 100, round(v_table[1,1]/tot, 4) * 100)
per_table <- cbind(Percent = per_table, Violent = c('Property', 'Violent'))
colnames(per_table) <- c('Percent', 'Type')
per_table <- as.data.frame(per_table)
per_table$Percent <- as.numeric(as.character.factor(per_table$Percent))
ggplot(data = per_table[order(per_table$Percent, decreasing = T),], aes(x = "", y = Percent, fill = Type)) + geom_bar(stat = 'identity') + coord_polar(theta = 'y', start = 0) + geom_text(aes(label = paste(Percent,'%')), position = position_stack(vjust = 0.5)) + labs(x = "", y = "", title = "Proportion of Crime Type during the Last 10 years") + theme_minimal()
crimeCat
df_group$Category <- as.character(levels(unlist(df_group$Category)))[unlist(df_group$Category)]
crimeCat$Crime.SubcategoryIndex <- factor(crimeCat$SUB_CATE,
levels=df_group$Category, labels=df_group$Index)
library(dplyr)
library(ggplot2)
library(ggdark)
library(reshape2)
source(file='script/functions/functions.R')
source('database/getDB.R')
### Main
# OCC_DATE, OCC_TIME, REP_DATE, SUB_CATE, PRI_DESC, PRECINCT, SECTOR, BEAT, NEIGHBOR
col <- c('SUB_CATE')
head(getColumns(col))
getwd()
### dataset
df <- getColumns(col)
head(df)
colnames(df)
nrow(df)
crimeCat <- df
crimeCat <- subset(crimeCat, crimeCat$SUB_CATE != '')
head(crimeCat)
group <- unique(crimeCat$SUB_CATE)
df_group <- data.frame(Category = group, Index = c(1:length(group)))
df_group
mapCrime <- read.csv('dataset/Crime/group_crime.csv', header = T, stringsAsFactors = F)
for(i in c(1:ncol(mapCrime))) {
mapCrime[,i] <- ifelse(is.na(mapCrime[,i]), 0, mapCrime[,i])
}
df_group$Category <- as.character(levels(unlist(df_group$Category)))[unlist(df_group$Category)]
crimeCat$Crime.SubcategoryIndex <- factor(crimeCat$SUB_CATE,
levels=df_group$Category, labels=df_group$Index)
crimeCat
mapCrime
crimeCat$Category <-
ifelse(crimeCat[,2] %in% mapCrime[,2], 'Murder',
ifelse(crimeCat[,2] %in% mapCrime[,3], 'Rape',
ifelse(crimeCat[,2] %in% mapCrime[,4], 'Robbery',
ifelse(crimeCat[,2] %in% mapCrime[,5], 'Aggravated',
ifelse(crimeCat[,2] %in% mapCrime[,6], 'Burglary',
ifelse(crimeCat[,2] %in% mapCrime[,7], 'LarcenyTheft',
ifelse(crimeCat[,2] %in% mapCrime[,8], 'VehicleTheft', 'Arson')))))))
crimeCat
crimeCat <- crimeCat[,-2]
violent <- c('Murder', 'Rape', 'Robbery', 'Aggravated')
crimeCat
crimeCat$Violent <- ifelse(crimeCat[,2] %in% violent, T, F)
vioTable <- table(crimeCat$Violent)
v_table <- data.frame(c(vioTable))
tot <- sum(v_table[,1])
per_table <- rbind(round(v_table[2,1]/tot, 4) * 100, round(v_table[1,1]/tot, 4) * 100)
per_table <- cbind(Percent = per_table, Violent = c('Property', 'Violent'))
colnames(per_table) <- c('Percent', 'Type')
per_table <- as.data.frame(per_table)
per_table$Percent <- as.numeric(as.character.factor(per_table$Percent))
ggplot(data = per_table[order(per_table$Percent, decreasing = T),], aes(x = "", y = Percent, fill = Type)) + geom_bar(stat = 'identity') + coord_polar(theta = 'y', start = 0) + geom_text(aes(label = paste(Percent,'%')), position = position_stack(vjust = 0.5)) + labs(x = "", y = "", title = "Proportion of Crime Type during the Last 10 years") + theme_minimal()
### dataset
df <- getColumns('*')
head(df)
####################################################################################################
### Functions
getColumns <- function(data, sYr, fYr, columns) {
year <- as.character(c(sYr:fYr)) # Year vector (for loop)
len <- nrow(data) # Total number of rows in the data frame
colLen <- length(columns)
month <- c('01','02','03','04','05','06','07','08','09','10','11','12')
start <- 0
# finds the starting point of the data
for(i in c(1:len)) {
if(substr(data[i,2], 7, 10) == as.character(sYr)) {
cat(substr(data[i,2], 7, 10), '\n')
start <- i
break
}
}
df <- data[c(start:len),] %>% select('Occurred.Date')
df$year <- substr(df[,1], 7, 10)
df$month <- substr(df[,1], 1, 2)
if(colLen > 0) {
for(i in c(1:colLen)) {
col <- columns[i]
df <- cbind(df, data[col])
}
}
return(df)
}
df_combined <- getColumns(df, 2008, 2018, c())
source('database/getDB.R')
df_combined <- getColumns('OCCR_DATE')
df_combined <- getColumns('OCC_DATE')
####################################################################################################
### Functions
getColumns <- function(data, sYr, fYr, columns) {
year <- as.character(c(sYr:fYr)) # Year vector (for loop)
len <- nrow(data) # Total number of rows in the data frame
colLen <- length(columns)
month <- c('01','02','03','04','05','06','07','08','09','10','11','12')
start <- 0
# finds the starting point of the data
for(i in c(1:len)) {
if(substr(data[i,2], 7, 10) == as.character(sYr)) {
cat(substr(data[i,2], 7, 10), '\n')
start <- i
break
}
}
df <- data[c(start:len),] %>% select('OCC_DATE')
df$year <- substr(df[,1], 7, 10)
df$month <- substr(df[,1], 1, 2)
if(colLen > 0) {
for(i in c(1:colLen)) {
col <- columns[i]
df <- cbind(df, data[col])
}
}
return(df)
}
df_combined <- getColumns(df, 2008, 2018, c())
### making a line graph
df_channged <- melt(df_combined, id = 'month')
df_channged
graph01 <- ggplot(df_channged, aes(x = month, y = value)) +
geom_line(aes(colour = variable, group = variable))  +
labs(x = "Month", y = "Frequency", title = "The Number of Monthly Crime Occurrences per Each Year", color='Year') + dark_theme_grey()
### calculating average values & adding a new column
average <- c()
for(i in c(1:12)) {
average <- c(average, round(mean(as.numeric(df_combined[i,-12])), 0))
}
average
df_combined <- getColumns(df, 2008, 2018, c())
df_combined
### making a line graph
df_channged <- melt(df_combined, id = 'month')
df_channged
graph01 <- ggplot(df_channged, aes(x = month, y = value)) +
geom_line(aes(colour = variable, group = variable))  +
labs(x = "Month", y = "Frequency", title = "The Number of Monthly Crime Occurrences per Each Year", color='Year') + dark_theme_grey()
graph01
df_combined
####################################################################################################
# Library Import
library(dplyr)
library(ggplot2)
library(ggdark)
library(reshape2)
library(stringr)
source('database/getDB.R')
# OCC_DATE, OCC_TIME, REP_DATE, SUB_CATE, PRI_DESC, PRECINCT, SECTOR, BEAT, NEIGHBOR
### dataset
df <- getColumns('*')
head(df)
####################################################################################################
### Functions
getColumns <- function(data, sYr, fYr, columns) {
year <- as.character(c(sYr:fYr)) # Year vector (for loop)
len <- nrow(data) # Total number of rows in the data frame
colLen <- length(columns)
month <- c('01','02','03','04','05','06','07','08','09','10','11','12')
start <- 0
# finds the starting point of the data
for(i in c(1:len)) {
if(substr(data[i,2], 7, 10) == as.character(sYr)) {
cat(substr(data[i,2], 7, 10), '\n')
start <- i
break
}
}
df <- data[c(start:len),] %>% select('OCC_DATE')
df$year <- substr(df[,1], 7, 10)
df$month <- substr(df[,1], 1, 2)
if(colLen > 0) {
for(i in c(1:colLen)) {
col <- columns[i]
df <- cbind(df, data[col])
}
}
return(df)
}
####################################################################################################
### Main
df_combined <- getColumns(df, 2008, 2018, c())
df_combined
### making a line graph
df_channged <- melt(df_combined, id = 'month')
df_channged
df_combined <- getColumns(df, 2008, 2018, c())
df_combined
df_combined <- df_combined[,-1]
### making a line graph
df_channged <- melt(df_combined, id = 'month')
df_channged
df_combined
####################################################################################################
# Library Import
library(dplyr)
library(ggplot2)
library(ggdark)
library(reshape2)
library(stringr)
source('database/getDB.R')
### dataset
df <- getColumns('*')
head(df)
####################################################################################################
### Functions
getColumns <- function(data, sYr, fYr, columns) {
year <- as.character(c(sYr:fYr)) # Year vector (for loop)
len <- nrow(data) # Total number of rows in the data frame
colLen <- length(columns)
month <- c('01','02','03','04','05','06','07','08','09','10','11','12')
start <- 0
# finds the starting point of the data
for(i in c(1:len)) {
if(substr(data[i,2], 7, 10) == as.character(sYr)) {
cat(substr(data[i,2], 7, 10), '\n')
start <- i
break
}
}
df <- data[c(start:len),] %>% select('OCC_DATE')
df$year <- substr(df[,1], 7, 10)
df$month <- substr(df[,1], 1, 2)
if(colLen > 0) {
for(i in c(1:colLen)) {
col <- columns[i]
df <- cbind(df, data[col])
}
}
return(df)
}
####################################################################################################
### Functions
getColumnsDF <- function(data, sYr, fYr, columns) {
year <- as.character(c(sYr:fYr)) # Year vector (for loop)
len <- nrow(data) # Total number of rows in the data frame
colLen <- length(columns)
month <- c('01','02','03','04','05','06','07','08','09','10','11','12')
start <- 0
# finds the starting point of the data
for(i in c(1:len)) {
if(substr(data[i,2], 7, 10) == as.character(sYr)) {
cat(substr(data[i,2], 7, 10), '\n')
start <- i
break
}
}
df <- data[c(start:len),] %>% select('OCC_DATE')
df$year <- substr(df[,1], 7, 10)
df$month <- substr(df[,1], 1, 2)
if(colLen > 0) {
for(i in c(1:colLen)) {
col <- columns[i]
df <- cbind(df, data[col])
}
}
return(df)
}
df_combined <- getColumnsDF(df, 2008, 2018, c())
source('script/functions/functions.R')
source('script/functions/functions.R')
source('script/functions/functions.R')
####################################################################################################
# Library Import
library(dplyr)
library(ggplot2)
library(ggdark)
library(reshape2)
library(stringr)
source('script/functions/functions.R')
source('database/getDB.R')
### dataset
df <- getColumns('*')
head(df)
####################################################################################################
# Library Import
library(dplyr)
library(ggplot2)
library(ggdark)
library(reshape2)
library(stringr)
source('script/functions/functions.R')
source('database/getDB.R')
### dataset
df <- getColumns('*')
head(df)
df_combined <- getColumnsDF(df, 2008, 2018, c())
df_combined <- df_combined[,-1]
### making a line graph
df_channged <- melt(df_combined, id = 'month')
df_combined
### making a line graph
df_channged <- melt(df_combined, id = 'occMonth')
df_channged
### making a line graph
table(df_combined)
### making a line graph
as.data.frame(table(df_combined))
### making a line graph
df_changed <- as.data.frame(table(df_combined))
graph01 <- ggplot(df_changed, aes(x = month, y = value)) +
geom_line(aes(colour = variable, group = variable))  +
labs(x = "Month", y = "Frequency", title = "The Number of Monthly Crime Occurrences per Each Year", color='Year') + dark_theme_grey()
### calculating average values & adding a new column
average <- c()
for(i in c(1:12)) {
average <- c(average, round(mean(as.numeric(df_combined[i,-12])), 0))
}
average
df_combined$avg <- average
df_combined
### adding a new line on graph01
graph02 <- graph01 +
geom_line(aes(x=month, avg, group=1), data=df_combined[,12:13], linetype='longdash', size = 1)
graph02
df_combined
df_combined <- getColumnsDF(df, 2008, 2018, c())
df_combined <- df_combined[,-1]
df_combined
df_combined <- getColumnsDF(df, 2008, 2018, c())
####################################################################################################
# Library Import
library(dplyr)
library(ggplot2)
library(ggdark)
library(reshape2)
library(stringr)
source('script/functions/functions.R')
source('database/getDB.R')
### dataset
df <- getColumns('*')
head(df)
df_combined <- getColumnsDF(df, 2008, 2018, c())
df_combined
df_combined <- df_combined[,-1]
### making a line graph
df_changed <- as.data.frame(table(df_combined))
df_changed
graph01 <- ggplot(df_changed, aes(x = month, y = value)) +
geom_line(aes(colour = variable, group = variable))  +
labs(x = "Month", y = "Frequency", title = "The Number of Monthly Crime Occurrences per Each Year", color='Year') + dark_theme_grey()
graph01
graph01 <- ggplot(df_changed, aes(x = occMonth, y = Freq)) +
geom_line(aes(colour = occYear, group = occYear))  +
labs(x = "Month", y = "Frequency", title = "The Number of Monthly Crime Occurrences per Each Year", color='Year') + dark_theme_grey()
graph01
### calculating average values & adding a new column
average <- c()
df_combined
df_changed
df_combined
####################################################################################################
# Library Import
library(dplyr)
library(ggplot2)
library(ggdark)
library(reshape2)
library(stringr)
source('script/functions/functions.R')
source('database/getDB.R')
# OCC_DATE, OCC_TIME, REP_DATE, SUB_CATE, PRI_DESC, PRECINCT, SECTOR, BEAT, NEIGHBOR
### dataset
df <- getColumns('*')
head(df)
####################################################################################################
####################################################################################################
### Main
df_combined <- getColumnsDF(df, 2008, 2018, c())
### making a line graph
df_changed <- as.data.frame(table(df_combined[,-1]))
df_combined
df_changed
graph01 <- ggplot(df_changed, aes(x = occMonth, y = Freq)) +
geom_line(aes(colour = occYear, group = occYear))  +
labs(x = "Month", y = "Frequency", title = "The Number of Monthly Crime Occurrences per Each Year", color='Year') + dark_theme_grey()
graph01
graph01 <- ggplot(df_changed, aes(x = occMonth, y = Freq)) +
geom_line(aes(color = occYear, group = occYear))  +
labs(x = "Month", y = "Frequency", title = "The Number of Monthly Crime Occurrences per Each Year", color='Year') + dark_theme_grey()
graph01
### calculating average values & adding a new column
average <- c()
df_combined <- getColumnsDF(df, 2008, 2018, c())
### making a line graph
df_changed <- as.data.frame(table(df_combined[,-1]))
df_combined
### making a line graph
df_changed <- as.data.frame(table(df_combined[,-1]))
df_changed
graph01 <- ggplot(df_changed, aes(x = occMonth, y = Freq)) +
geom_line(aes(color = occYear, group = occYear))  +
labs(x = "Month", y = "Frequency", title = "The Number of Monthly Crime Occurrences per Each Year", color='Year') + dark_theme_grey()
graph01
### calculating average values & adding a new column
average <- c()
### calculating average values & adding a new column
mx_df <- as.matrix(df_changed)
mx_df
df_changed
### calculating average values & adding a new column
as.matrix(table(df_combined[,-1]))
### calculating average values & adding a new column
mx_table <- as.matrix(table(df_combined[,-1]))
ncol(mx_table)
for(i in c(1:12)) {
average <- c(average, round(mean(as.numeric(mx_table[,i])), 0))
}
average
df_combined$avg <- average
df_combined
average
df_changed$avg <- average
df_changed
### adding a new line on graph01
graph02 <- graph01 +
geom_line(aes(group=1), data=average, linetype='longdash', size = 1)
as.data.frame(average)
avg <- as.data.frame(average)
### adding a new line on graph01
graph02 <- graph01 +
geom_line(x = average, aes(group=1), data=avg, linetype='longdash', size = 1)
graph02
avg <- as.data.frame(average)
graph01
### adding a new line on graph01
graph02 <- graph01 +
geom_line(aes(group=1), data=avg, linetype='longdash', size = 1)
graph02
### adding a new line on graph01
graph02 <- graph01 +
geom_line(aes(group=1), data=avg, linetype='longdash', size = 1, inherit.aes = FALSE)
graph02
### adding a new line on graph01
graph02 <- graph01 +
geom_line(aes(x = '', y = '', group=1), data=avg, linetype='longdash', size = 1, inherit.aes = FALSE)
graph02
### adding a new line on graph01
graph02 <- graph01 +
geom_line(aes(x = '', y = average, group=1), data=avg, linetype='longdash', size = 1, inherit.aes = FALSE)
graph02
df_changed$occMonth
avg <- as.data.frame(average, occMonth = unique(df_changed$occMonth))
avg
avg <- as.data.frame(average)
avg <- cbind(avg, unique(df_combined$occMonth))
avg
avg <- as.data.frame(average)
avg <- cbind(avg, month = unique(df_combined$occMonth))
avg
### adding a new line on graph01
graph02 <- graph01 +
geom_line(aes(x = month, y = average, group=1), data=avg, linetype='longdash', size = 1, inherit.aes = FALSE)
graph02
mx_table
### making a line graph
df_changed <- as.data.frame(table(df_combined[,-1]))
df_changed
### calculating average values & adding a new column
mx_table <- as.matrix(table(df_combined[,-1]))
mx_table
df_combined
### calculating average values & adding a new column
mx_table <- as.matrix(table(df_combined[,-1]))
mx_table
ncol(mx_table)
average <- c()
for(i in c(1:12)) {
average <- c(average, round(mean(as.numeric(mx_table[,i])), 0))
}
avg <- as.data.frame(average)
avg <- cbind(avg, month = unique(df_combined$occMonth))
### adding a new line on graph01
graph02 <- graph01 +
geom_line(aes(x = month, y = average, group=1), data=avg, linetype='longdash', size = 1, inherit.aes = FALSE)
graph02
