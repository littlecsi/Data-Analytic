# [1] TRUE
## Reject Null Hypothesis
### Therefore, There is difference in seasonal crime rates.
t_season_tot <- transform(t_season_tot, season = factor(season, levels = c('spring', 'summer', 'fall', 'winter')))
ggplot(data = t_season_tot, aes(x = "", y = V1, fill = season)) + geom_bar(stat = 'identity') + coord_polar(theta = 'y') + labs(x = "Year", y = "Proportion", title = "Proportion of Seasonal Average Crime Occurance during the Last 10 years") + theme_minimal()
ggplot(data = t_season_tot, aes(x = "", y = V1, fill = season)) + geom_bar(stat = 'identity') + coord_polar(theta = 'y', direction = -1) + labs(x = "Year", y = "Proportion", title = "Proportion of Seasonal Average Crime Occurance during the Last 10 years") + theme_minimal()
resultChisq <- chisq.test(unlist(df_season_tot[1,]))
resultChisq
df_season_tot
resultChisq <- chisq.test(df_season_tot[1,])
resultChisq$p.value > 0.05
library(dplyr)
library(ggplot2)
library(ggdark)
library(reshape2)
### set work space
setwd('topic/Crime/')
### dataset
df <- read.csv('Seattle_Crime_Data.csv', header = T, stringsAsFactors = F)
head(df)
colnames(df)
getcolumns <- function(data, columns) {
len <- length(columns)
if(length(len > 1)) {
df <- data %>% select(columns[1])
for(i in c(2:len)) {
col <- columns[i]
df <- cbind(df, data[col])
}
} else {
df <- data %>% select(columns)
}
return(df)
}
colnames(df)
# get columns data with date
## param : necessary columns
## return : data frame(date, param data)
getcolumns <- function(data, columns) {
len <- length(columns)
if(length(len > 0)) {
for(i in c(1:len)) {
col <- columns[i]
df <- cbind(df, data[col])
}
} else {
df <- data %>% select('Occurred.Date')
}
return(df)
}
getcolumns()
getcolumns(df)
getcolumns(df, c())
gg <- getcolumns(df, c())
gg
# get columns data with date
## param : necessary columns
## return : data frame(date, param data)
getcolumns <- function(data, columns) {
len <- length(columns)
if(length(len > 0)) {
for(i in c(1:len)) {
col <- columns[i]
df <- cbind(df, data[col])
}
} else {
df <- data %>% select('Occurred.Date')
}
return(df)
}
gg <- getcolumns(df, c())
gg
# get columns data with date
## param : necessary columns
## return : data frame(date, param data)
getcolumns <- function(data, columns) {
len <- length(columns)
print(len)
if(length(len > 0)) {
for(i in c(1:len)) {
col <- columns[i]
df <- cbind(df, data[col])
}
} else {
df <- data %>% select('Occurred.Date')
}
return(df)
}
gg <- getcolumns(df, c())
# get columns data with date
## param : necessary columns
## return : data frame(date, param data)
getcolumns <- function(data, columns) {
len <- length(columns)
print(len)
if(len > 0) {
for(i in c(1:len)) {
col <- columns[i]
df <- cbind(df, data[col])
}
} else {
df <- data %>% select('Occurred.Date')
}
return(df)
}
gg <- getcolumns(df, c())
gg
colnames(df)
gg <- getcolumns(df, c('Crime.Subcategory'))
gg
# get columns data with date
## param : necessary columns
## return : data frame(date, param data)
getcolumns <- function(data, columns) {
len <- length(columns)
df <- data %>% select('Occurred.Date')
if(len > 0) {
for(i in c(1:len)) {
col <- columns[i]
df <- cbind(df, data[col])
}
}
return(df)
}
gg <- getcolumns(df, c('Crime.Subcategory'))
gg
crimeCat <- getcolumns(df, c('Crime.Subcategory'))
crimeCat[,2]
unique(crimeCat)
unique(crimeCat$Crime.Subcategory)
crimeCat <- gsub(x = crimeCat, pattern != '')
crimeCat <- gsub(crimeCat$Crime.Subcategory != '')
crimeCat <- gsub(crimeCat, crimeCat$Crime.Subcategory != '')
crimeCat <- gsub(crimeCat$Crime.Subcategory != '', crimeCat)
crimeCat <- gsub(crimeCat$Crime.Subcategory != '', x - crimeCat)
crimeCat <- gsub(crimeCat$Crime.Subcategory != '', x = crimeCat)
crimeCat <- subset(crimeCat, crimeCat$Crime.Subcategory != '')
crimeCat
unique(crimeCat$Crime.Subcategory)
group <- unique(crimeCat$Crime.Subcategory)
group
class(group)
mode(group)
df_group <- data.frame(Category = group, Index = c(1:length(group)))
df_group
nrow(df)
mapCrime <- read.csv('group_crime.csv', header = T, stringsAsFactors = F)
mapCrime
mapCrime <- read.table('group_crime.csv', header = T, stringsAsFactors = F)
mapCrime
mapCrime <- read.table('group_crime.csv')
mapCrime <- read.table('group_crime.csv', sep = ',')
mapCrime
mapCrime <- read.table('group_crime.csv', sep = ',', header = T)
mapCrime
mapCrime <- read.csv('group_crime.csv', header = T, stringsAsFactors = F)
mapCrime
mapCrime <- na.omit(mapCrime)
mapCrime
mapCrime <- read.csv('group_crime.csv', header = T, stringsAsFactors = F)
mapCrime <-
crimeCat$Category <-
ifelse(crimeCat[,2] %in% c('HOMICIDE'), 'Murder',
ifelse(crimeCat[,2] %in% c("SEX OFFENSE-OTHER", ), 'Rape',
ifelse(crimeCat[,2] %in% c('HOMICIDE'), 'Robbery',
ifelse(crimeCat[,2] %in% c('HOMICIDE'), 'Aggravated',
ifelse(crimeCat[,2] %in% c('HOMICIDE'), 'Burglary',
ifelse(crimeCat[,2] %in% c('HOMICIDE'), 'LarcenyTheft',
ifelse(crimeCat[,2] %in% c('HOMICIDE'), 'VehicleTheft', 'Arson')))))))
mapCrime <- ifelse(is.na(mapCrime), 0, mapCrime)
mapCrime
mapCrime <- read.csv('group_crime.csv', header = T, stringsAsFactors = F)
for(i in c(1:nrow(mapCrime))) {
mapCrime[,i] <- ifelse(is.na(mapCrime[,i]), 0, mapCrime[,i])
}
nrow(mapCrime)
for(i in c(1:ncol(mapCrime))) {
mapCrime[,i] <- ifelse(is.na(mapCrime[,i]), 0, mapCrime[,i])
}
mapCrime <- ifelse(is.na(mapCrime), 0, mapCrime)
for(i in c(1:ncol(mapCrime))) {
mapCrime[,i] <- ifelse(is.na(mapCrime[,i]), 0, mapCrime[,i])
}
mapCrime <- read.csv('group_crime.csv', header = T, stringsAsFactors = F)
nrow(mapCrime)
for(i in c(1:ncol(mapCrime))) {
mapCrime[,i] <- ifelse(is.na(mapCrime[,i]), 0, mapCrime[,i])
}
mapCrime
mapCrime
colnames(mapCrime)
crimeCat$Category <-
ifelse(crimeCat[,2] %in% mapCrime[,2], 'Murder',
ifelse(crimeCat[,2] %in% mapCrime[,3], 'Rape',
ifelse(crimeCat[,2] %in% mapCrime[,4], 'Robbery',
ifelse(crimeCat[,2] %in% mapCrime[,5], 'Aggravated',
ifelse(crimeCat[,2] %in% mapCrime[,6], 'Burglary',
ifelse(crimeCat[,2] %in% mapCrime[,7], 'LarcenyTheft',
ifelse(crimeCat[,2] %in% mapCrime[,8], 'VehicleTheft', 'Arson')))))))
head(crimeCat)
mapCrime[,2]
mapCrime[,3]
group <- unique(crimeCat$Crime.Subcategory)
df_group <- data.frame(Category = group, Index = c(1:length(group)))
df_group
crimeCat
str(crimeCat)
mapCrime
str(mapCrime)
str(df_group)
mapCrime
df_group
str(crimeCat)
crimeCat[,2]
df_group
crimeCat
mapCrime
crimeCat
str(crimeCat)
str(mapCrime)
str(crimeCat)
str(df_group)
df_group
crimeCat$Crime.Subcategory <- factor(crimeCat$Crime.Subcategory,
levels=df_group$Category, labels=df_group$Index)
str(crimeCat$Crime.Subcategory)
str(crimeCat)
str(df_group)
df_group$Category <- as.character(levels(unlist(df_group$Category)))[unlist(df_group$Category)]
str(df_group)
crimeCat <- getcolumns(df, c('Crime.Subcategory'))
crimeCat <- subset(crimeCat, crimeCat$Crime.Subcategory != '')
crimeCat$Crime.Subcategory <- factor(crimeCat$Crime.Subcategory,
levels=df_group$Category, labels=df_group$Index)
str(crimeCat)
df_group$Category
df_group$Index
crimeCat$Crime.Subcategory
crimeCat <- getcolumns(df, c('Crime.Subcategory'))
crimeCat <- subset(crimeCat, crimeCat$Crime.Subcategory != '')
crimeCat
crimeCat$Crime.SubcategoryIndex <- factor(crimeCat$Crime.Subcategory,
levels=df_group$Category, labels=df_group$Index)
crimeCat$Category <-
ifelse(crimeCat[,3] %in% mapCrime[,2], 'Murder',
ifelse(crimeCat[,3] %in% mapCrime[,3], 'Rape',
ifelse(crimeCat[,3] %in% mapCrime[,4], 'Robbery',
ifelse(crimeCat[,3] %in% mapCrime[,5], 'Aggravated',
ifelse(crimeCat[,3] %in% mapCrime[,6], 'Burglary',
ifelse(crimeCat[,3] %in% mapCrime[,7], 'LarcenyTheft',
ifelse(crimeCat[,3] %in% mapCrime[,8], 'VehicleTheft', 'Arson')))))))
head(crimeCat)
df_group
categoryVec <- c('Murder', 'Rape', 'Robbery', 'Aggravated', 'Burglary', 'LarcenyTheft', 'VehicleTheft', 'Arson')
for(i in c(1:length(categoryVec))) {
if(crimeCat[,3] %in% mapCrime[,i+1]){
crimeCat$Category <- categoryVec[i]
}
}
c(1:length(categoryVec))
1:length(categoryVec)
crimeCat <- getcolumns(df, c('Crime.Subcategory'))
crimeCat <- subset(crimeCat, crimeCat$Crime.Subcategory != '')
crimeCat
for(i in 1:length(categoryVec)) {
if(crimeCat[,3] %in% mapCrime[,i+1]){
crimeCat$Category <- categoryVec[i]
}
}
crimeCat$Category
categoryVec[3]
categoryVec <- c('Murder', 'Rape', 'Robbery', 'Aggravated', 'Burglary', 'LarcenyTheft', 'VehicleTheft', 'Arson')
for(i in 1:length(categoryVec)) {
if(crimeCat[,3] %in% mapCrime[,i+1]){
crimeCat$Category <- categoryVec[i]
}
}
crimeCat[,3]
df_group$Category <- as.character(levels(unlist(df_group$Category)))[unlist(df_group$Category)]
crimeCat$Crime.SubcategoryIndex <- factor(crimeCat$Crime.Subcategory,
levels=df_group$Category, labels=df_group$Index)
library(dplyr)
library(ggplot2)
library(ggdark)
library(reshape2)
### set work space
setwd('topic/Crime/')
### dataset
df <- read.csv('Seattle_Crime_Data.csv', header = T, stringsAsFactors = F)
head(df)
colnames(df)
nrow(df)
# get columns data with date
## param : necessary columns
## return : data frame(date, param data)
getcolumns <- function(data, columns) {
len <- length(columns)
df <- data %>% select('Occurred.Date')
if(len > 0) {
for(i in c(1:len)) {
col <- columns[i]
df <- cbind(df, data[col])
}
}
return(df)
}
crimeCat <- getcolumns(df, c('Crime.Subcategory'))
crimeCat <- subset(crimeCat, crimeCat$Crime.Subcategory != '')
crimeCat
group <- unique(crimeCat$Crime.Subcategory)
df_group <- data.frame(Category = group, Index = c(1:length(group)))
df_group
mapCrime <- read.csv('group_crime.csv', header = T, stringsAsFactors = F)
for(i in c(1:ncol(mapCrime))) {
mapCrime[,i] <- ifelse(is.na(mapCrime[,i]), 0, mapCrime[,i])
}
str(crimeCat)
str(mapCrime)
str(df_group)
df_group$Category <- as.character(levels(unlist(df_group$Category)))[unlist(df_group$Category)]
crimeCat$Crime.SubcategoryIndex <- factor(crimeCat$Crime.Subcategory,
levels=df_group$Category, labels=df_group$Index)
categoryVec <- c('Murder', 'Rape', 'Robbery', 'Aggravated', 'Burglary', 'LarcenyTheft', 'VehicleTheft', 'Arson')
crimeCat$Category
for(i in 1:length(categoryVec)) {
if(crimeCat[,3] %in% mapCrime[,i+1]) {
crimeCat$Category <- categoryVec[i]
}
}
crimeCat$Category
library(dplyr)
library(ggplot2)
library(ggdark)
library(reshape2)
### set work space
setwd('topic/Crime/')
### dataset
df <- read.csv('Seattle_Crime_Data.csv', header = T, stringsAsFactors = F)
head(df)
colnames(df)
nrow(df)
# get columns data with date
## param : necessary columns
## return : data frame(date, param data)
getcolumns <- function(data, columns) {
len <- length(columns)
df <- data %>% select('Occurred.Date')
if(len > 0) {
for(i in c(1:len)) {
col <- columns[i]
df <- cbind(df, data[col])
}
}
return(df)
}
crimeCat <- getcolumns(df, c('Crime.Subcategory'))
crimeCat <- subset(crimeCat, crimeCat$Crime.Subcategory != '')
crimeCat
group <- unique(crimeCat$Crime.Subcategory)
df_group <- data.frame(Category = group, Index = c(1:length(group)))
df_group
mapCrime <- read.csv('group_crime.csv', header = T, stringsAsFactors = F)
for(i in c(1:ncol(mapCrime))) {
mapCrime[,i] <- ifelse(is.na(mapCrime[,i]), 0, mapCrime[,i])
}
str(crimeCat)
str(mapCrime)
str(df_group)
df_group$Category <- as.character(levels(unlist(df_group$Category)))[unlist(df_group$Category)]
crimeCat$Crime.SubcategoryIndex <- factor(crimeCat$Crime.Subcategory,
levels=df_group$Category, labels=df_group$Index)
categoryVec <- c('Murder', 'Rape', 'Robbery', 'Aggravated', 'Burglary', 'LarcenyTheft', 'VehicleTheft', 'Arson')
mapCrime
mapCrime[9]
categoryVec
crimeCat$Category
for(j in 1:nrow(crimeCat)) {
for(i in 1:length(categoryVec)) {
if(crimeCat[,3] %in% mapCrime[,i+1]) {
crimeCat$Category[j] <- categoryVec[i]
}
}
}
for(j in 1:nrow(crimeCat)) {
for(i in 1:length(categoryVec)) {
if(crimeCat[,3] %in% mapCrime[,i+1]) {
crimeCat$Category[j] <- categoryVec[i]
}
cat('i :',i,', j:',j)
}
}
crimeCat$Category <-
ifelse(crimeCat[,3] %in% mapCrime[,2], 'Murder',
ifelse(crimeCat[,3] %in% mapCrime[,3], 'Rape',
ifelse(crimeCat[,3] %in% mapCrime[,4], 'Robbery',
ifelse(crimeCat[,3] %in% mapCrime[,5], 'Aggravated',
ifelse(crimeCat[,3] %in% mapCrime[,6], 'Burglary',
ifelse(crimeCat[,3] %in% mapCrime[,7], 'LarcenyTheft',
ifelse(crimeCat[,3] %in% mapCrime[,8], 'VehicleTheft', 'Arson')))))))
head(crimeCat)
head(crimeCat)
crimeCat <- crimeCat[,-3]
head(crimeCat)
mapCrime
violent <- mapCrime[,10:11]
violent
violent <- c('Murder', 'Rape', 'Robbery', 'Aggravated')
crimeCat$Violent <- ifelse(crimeCat[,4] %in% violent, T, F)
violent
crimeCat[,4]
crimeCat[,4]
crimeCat
crimeCat$Violent <- ifelse(crimeCat[,3] %in% violent, T, F)
head(crimeCat)
table(crimeCat$Violent)
vioTable <- table(crimeCat$Violent)
vioTable
colnames(vioTable) <- c('Violent', 'Property')
pie(vioTable)
class(vioTable)
v_table <- c(vioTable)
v_table
class(v_table)
v_table <- as.data.frame(c(vioTable))
v_table
v_table <- data.frame(c(vioTable))
v_table
colnames(v_table)
rownames(v_table)
v_table
rownames
rownames(v_table)
df_table <- cbind(v_table, Violent=rownames(v_table))
df_table
df_table <- cbind(v_table, Violent=c('Property', 'Violent'))
colnames(df_table) <- c('Freq', 'Type')
df_table
ggplot(data = df_table, aes(x = "", y = Freq, fill = Type)) + geom_bar(stat = 'identity') + coord_polar(theta = 'y', direction = -1) + labs(x = "Year", y = "Proportion", title = "Proportion of Seasonal Average Crime Occurance during the Last 10 years") + theme_minimal()
ggplot(data = df_table, aes(x = "", y = Freq, fill = Type)) + geom_bar(stat = 'identity') + coord_polar(theta = 'y', direction = -1) + labs(title = "Proportion of Seasonal Average Crime Occurance during the Last 10 years") + theme_minimal()
ggplot(data = df_table, aes(x = "", y = Freq, fill = Type)) + geom_bar(stat = 'identity') + coord_polar(theta = 'y', direction = -1) + labs(x = "", y = "", title = "Proportion of Seasonal Average Crime Occurance during the Last 10 years") + theme_minimal()
ggplot(data = df_table, aes(x = "", y = Freq, fill = Type)) + geom_bar(stat = 'identity') + coord_polar(theta = 'y', direction = 1) + labs(x = "", y = "", title = "Proportion of Crime Type during the Last 10 years") + theme_minimal()
vioTable <- prop.table(crimeCat$Violent)
v_table <- data.frame(c(vioTable))
v_table
crimeCat$Violent
vioTable <- table(crimeCat$Violent)
vioTable
# get columns data with date
## param : necessary columns
## return : data frame(date, param data)
getColumns <- function(data, sYr, fYr, columns) {
year <- as.character(c(sYr:fYr)) # Year vector (for loop)
len <- nrow(data) # Total number of rows in the data frame
colLen <- length(columns)
month <- c('01','02','03','04','05','06','07','08','09','10','11','12')
start <- 0
# finds the starting point of the data
for(i in c(1:len)) {
if(substr(data[i,2], 7, 10) == as.character(sYr)) {
start <- i; break;
}
}
df <- data %>% select('Occurred.Date')
if(colLen > 0) {
for(i in c(1:colLen)) {
col <- columns[i]
df <- cbind(df, data[col])
}
}
return(df)
}
crimeCat <- getcolumns(df, 2008, 2018, c('Crime.Subcategory'))
library(dplyr)
library(ggplot2)
library(ggdark)
library(reshape2)
### set work space
setwd('topic/Crime/')
### dataset
df <- read.csv('Seattle_Crime_Data.csv', header = T, stringsAsFactors = F)
head(df)
colnames(df)
nrow(df)
# get columns data with date
## param : necessary columns
## return : data frame(date, param data)
getColumns <- function(data, sYr, fYr, columns) {
year <- as.character(c(sYr:fYr)) # Year vector (for loop)
len <- nrow(data) # Total number of rows in the data frame
colLen <- length(columns)
month <- c('01','02','03','04','05','06','07','08','09','10','11','12')
start <- 0
# finds the starting point of the data
for(i in c(1:len)) {
if(substr(data[i,2], 7, 10) == as.character(sYr)) {
start <- i; break;
}
}
df <- data %>% select('Occurred.Date')
if(colLen > 0) {
for(i in c(1:colLen)) {
col <- columns[i]
df <- cbind(df, data[col])
}
}
return(df)
}
crimeCat <- getcolumns(df, 2008, 2018, c('Crime.Subcategory'))
crimeCat <- getColumns(df, 2008, 2018, c('Crime.Subcategory'))
crimeCat <- subset(crimeCat, crimeCat$Crime.Subcategory != '')
crimeCat
head(crimeCat)
