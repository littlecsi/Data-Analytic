# in 2015
test_15 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2015'), 1, 2)))
data_2015 <- test_15$Freq
data_2015
# in 2016
test_16 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2016'), 1, 2)))
data_2016 <- test_16$Freq
data_2016
# in 2017
test_17 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2017'), 1, 2)))
data_2017 <- test_08$Freq
data_2017
# in 2018
test_18 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2018'), 1, 2)))
data_2018 <- test_18$Freq
data_2018
### data combined
df_combined <- data.frame(cbind(data_2008, data_2009, data_2010, data_2011, data_2012, data_2013, data_2014, data_2015, data_2016, data_2017, data_2018))
df_combined
colnames(df_combined) <- c('2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018')
df_combined$month <- c('01','02','03','04','05','06','07','08','09','10','11','12')
### making a line graph
df_channged <- melt(df_combined, id = 'month')
df_channged
graph01 <- ggplot(df_channged, aes(x = month, y = value)) +
geom_line(aes(colour = variable, group = variable))  +
labs(x = "Month", y = "Frequency", title = "The Number of Monthly Crime Occurrences per Each Year", color='Year') +
dark_theme_grey()
### calculating average values & adding a new column
average <- c()
for(i in c(1:12)) {
average <- c(average, round(mean(as.numeric(df_combined[i,-12])), 0))
}
average
df_combined$avg <- average
df_combined
### adding a new line on graph01
graph02 <- graph01 +
geom_line(aes(x=month, avg, group=1), data=df_combined[,12:13], linetype='longdash', size = 1)
graph02
library(dplyr)
library(ggplot2)
library(ggdark)
### set work space
# setwd('topic/Crime/')
viewClassNMode <- function(data) {
cat('class:', class(data))
cat('\n','mode:', mode(data))
}
### dataset
df <- read.csv('Seattle_Crime_Data.csv', header = T)
head(df)
### sorting dataset to extract 'Occurred.Date' column
df01 <- df %>% select('Occurred.Date')
head(df01)
### substring years
year <- substr(df01$Occurred.Date, 7, 10)
head(year)
# [1] "1908" "1964" "1973" "1974" "1975" "1975"
### changing data form
tb_year <- table(year)
head(tb_year)
# year
# 1908 1964 1973 1974 1975
# 2    1    1    1    1    2
### data framing
df_year <- as.data.frame(tb_year)
head(df_year)
# year Freq
# 1         2
# 2 1908    1
# 3 1964    1
# 4 1973    1
# 5 1974    1
# 6 1975    2
# extracting specific years(2008~2018)
df <- df_year[35:45,]
mean_occr <- mean(df$Freq)
mean_occr
# [1] 46084.45
regFreq <- as.numeric(df$Freq)
regYear <- as.numeric(df$year)
reg <- lm(formula = regFreq ~ regYear)
summary(reg)
# Call:
#   lm(formula = regFreq ~ regYear)
#
# Residuals:
#   Min      1Q  Median      3Q     Max
# -4146.9  -393.0   343.8   963.0  2693.8
#
# Coefficients:
#   Estimate Std. Error t value Pr(>|t|)
# (Intercept)   8861.5     8190.8   1.082  0.30744
# regYear        930.6      204.1   4.559  0.00137 **
#   ---
#   Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#
# Residual standard error: 2141 on 9 degrees of freedom
# Multiple R-squared:  0.6978,	Adjusted R-squared:  0.6642
# F-statistic: 20.78 on 1 and 9 DF,  p-value: 0.001369
# making a graphic chart
ggplot(data = df, aes(x = year, y = Freq, group = 1)) +
geom_line(linetype = "dotted", color = "red", size = 2) +
geom_point(color = "blue", size = 3) +
labs(x = "Year", y = "Frequency", title = "The Number of Crime Occurrences per Each Year during the Last 10 years") +
dark_theme_gray() +
# geom_hline(yintercept = mean_occr, color = "orange", size = 1) +
geom_text(aes(label = Freq), vjust = -0.3) +
stat_smooth(method = 'lm', col = 'orange')
### season combine
spring <- subset(df_combined, df_combined$month == '03' | df_combined$month == '04' | df_combined$month ==  '05')
library(dplyr)
library(ggplot2)
library(ggdark)
library(reshape2)
### set work space
setwd('topic/Crime/')
### dataset
df <- read.csv('Seattle_Crime_Data.csv', header = T)
head(df)
### sorting dataset to extract 'Occurred.Date' column
df01 <- df %>%
select('Occurred.Date')
head(df01)
### 2008 ~ 2019 data
# hard-coding is the best!!!!!
# View(substr(df01$Occurred.Date, 7, 10) == '2008')
# df$Occurred.Date[1037] is TRUE
df01 <- substr(df01$Occurred.Date[1037:nrow(df01)], 1, 10)
head(df01)
df01 <- gsub('/','', df01)
head(df01)
### data for each
# in 2008
test_08 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2008'), 1, 2)))
data_2008 <- test_08$Freq
data_2008
# in 2009
test_09 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2009'), 1, 2)))
data_2009 <- test_09$Freq
data_2009
# in 2010
test_10 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2010'), 1, 2)))
data_2010 <- test_10$Freq
data_2010
# in 2011
test_11 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2011'), 1, 2)))
data_2011 <- test_11$Freq
data_2011
# in 2012
test_12 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2012'), 1, 2)))
data_2012 <- test_12$Freq
data_2012
# in 2013
test_13 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2013'), 1, 2)))
data_2013 <- test_13$Freq
data_2013
# in 2014
test_14 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2014'), 1, 2)))
data_2014 <- test_14$Freq
data_2014
# in 2015
test_15 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2015'), 1, 2)))
data_2015 <- test_15$Freq
data_2015
# in 2016
test_16 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2016'), 1, 2)))
data_2016 <- test_16$Freq
data_2016
# in 2017
test_17 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2017'), 1, 2)))
data_2017 <- test_08$Freq
data_2017
# in 2018
test_18 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2018'), 1, 2)))
data_2018 <- test_18$Freq
data_2018
### data combined
df_combined <- data.frame(cbind(data_2008, data_2009, data_2010, data_2011, data_2012, data_2013, data_2014, data_2015, data_2016, data_2017, data_2018))
df_combined
colnames(df_combined) <- c('2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018')
df_combined$month <- c('01','02','03','04','05','06','07','08','09','10','11','12')
### season combine
spring <- subset(df_combined, df_combined$month == '03' | df_combined$month == '04' | df_combined$month ==  '05')
spring
### season combine
spring <- subset(df_combined, df_combined$month %in% c('03', '04', '05'))
spring
### season combine
spring <- subset(df_combined, df_combined$month %in% c('03', '04', '05'))
summer <- subset(df_combined, df_combined$month %in% c('06', '07', '08'))
fall <- subset(df_combined, df_combined$month %in% c('09', '10', '11'))
winter <- subset(df_combined, df_combined$month %in% c('12', '01', '02'))
spring_avg <- c()
for(i in c(1:12)) {
spring_avg <- c(spring_avg, round(mean(as.numeric(spring[i,-12])), 0))
}
spring_avg
average <- c()
for(i in c(1:3)) {
average <- c(average, round(mean(as.numeric(df_combined[i,-12])), 0))
}
average
library(dplyr)
library(ggplot2)
library(ggdark)
library(reshape2)
### set work space
setwd('topic/Crime/')
### dataset
df <- read.csv('Seattle_Crime_Data.csv', header = T)
head(df)
### sorting dataset to extract 'Occurred.Date' column
df01 <- df %>%
select('Occurred.Date')
head(df01)
### 2008 ~ 2019 data
# hard-coding is the best!!!!!
# View(substr(df01$Occurred.Date, 7, 10) == '2008')
# df$Occurred.Date[1037] is TRUE
df01 <- substr(df01$Occurred.Date[1037:nrow(df01)], 1, 10)
head(df01)
df01 <- gsub('/','', df01)
head(df01)
### data for each
# in 2008
test_08 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2008'), 1, 2)))
data_2008 <- test_08$Freq
data_2008
# in 2009
test_09 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2009'), 1, 2)))
data_2009 <- test_09$Freq
data_2009
# in 2010
test_10 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2010'), 1, 2)))
data_2010 <- test_10$Freq
data_2010
# in 2011
test_11 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2011'), 1, 2)))
data_2011 <- test_11$Freq
data_2011
# in 2012
test_12 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2012'), 1, 2)))
data_2012 <- test_12$Freq
data_2012
# in 2013
test_13 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2013'), 1, 2)))
data_2013 <- test_13$Freq
data_2013
# in 2014
test_14 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2014'), 1, 2)))
data_2014 <- test_14$Freq
data_2014
# in 2015
test_15 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2015'), 1, 2)))
data_2015 <- test_15$Freq
data_2015
# in 2016
test_16 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2016'), 1, 2)))
data_2016 <- test_16$Freq
data_2016
# in 2017
test_17 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2017'), 1, 2)))
data_2017 <- test_08$Freq
data_2017
# in 2018
test_18 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2018'), 1, 2)))
data_2018 <- test_18$Freq
data_2018
### data combined
df_combined <- data.frame(cbind(data_2008, data_2009, data_2010, data_2011, data_2012, data_2013, data_2014, data_2015, data_2016, data_2017, data_2018))
df_combined
colnames(df_combined) <- c('2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018')
df_combined$month <- c('01','02','03','04','05','06','07','08','09','10','11','12')
### season combine
spring <- subset(df_combined, df_combined$month %in% c('03', '04', '05'))
spring_avg <- c()
for(i in c(1:12)) {
spring_avg <- c(spring_avg, round(mean(as.numeric(spring[i,-12])), 0))
}
spring_avg
for(i in c(1:3)) {
spring_avg <- c(spring_avg, round(mean(as.numeric(spring[i,-12])), 0))
}
spring_avg
spring
average <- c()
for(i in c(1:12)) {
average <- c(average, round(mean(as.numeric(df_combined[i,-12])), 0))
}
average
df_combined$avg <- average
spring
spring
spring_avg <- c()
for(i in c(1:3)) {
spring_avg <- c(spring_avg, round(mean(as.numeric(spring[i,-12])), 0))
}
spring_avg
spring_avg <- c()
for(i in c(1:11)) {
spring_avg <- c(spring_avg, round(mean(as.numeric(spring[,i])), 0))
}
spring_avg
spring_avg <- getSeasonalAvg(spring)
library(dplyr)
library(ggplot2)
library(ggdark)
library(reshape2)
### set work space
setwd('topic/Crime/')
### dataset
df <- read.csv('Seattle_Crime_Data.csv', header = T)
head(df)
### sorting dataset to extract 'Occurred.Date' column
df01 <- df %>%
select('Occurred.Date')
head(df01)
### 2008 ~ 2019 data
# hard-coding is the best!!!!!
# View(substr(df01$Occurred.Date, 7, 10) == '2008')
# df$Occurred.Date[1037] is TRUE
df01 <- substr(df01$Occurred.Date[1037:nrow(df01)], 1, 10)
head(df01)
df01 <- gsub('/','', df01)
head(df01)
### data for each
# in 2008
test_08 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2008'), 1, 2)))
data_2008 <- test_08$Freq
data_2008
# in 2009
test_09 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2009'), 1, 2)))
data_2009 <- test_09$Freq
data_2009
# in 2010
test_10 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2010'), 1, 2)))
data_2010 <- test_10$Freq
data_2010
# in 2011
test_11 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2011'), 1, 2)))
data_2011 <- test_11$Freq
data_2011
# in 2012
test_12 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2012'), 1, 2)))
data_2012 <- test_12$Freq
data_2012
# in 2013
test_13 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2013'), 1, 2)))
data_2013 <- test_13$Freq
data_2013
# in 2014
test_14 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2014'), 1, 2)))
data_2014 <- test_14$Freq
data_2014
# in 2015
test_15 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2015'), 1, 2)))
data_2015 <- test_15$Freq
data_2015
# in 2016
test_16 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2016'), 1, 2)))
data_2016 <- test_16$Freq
data_2016
# in 2017
test_17 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2017'), 1, 2)))
data_2017 <- test_08$Freq
data_2017
# in 2018
test_18 <- as.data.frame(
table(
substr(
subset(df01, substr(df01, 5, 8) == '2018'), 1, 2)))
data_2018 <- test_18$Freq
data_2018
### data combined
df_combined <- data.frame(cbind(data_2008, data_2009, data_2010, data_2011, data_2012, data_2013, data_2014, data_2015, data_2016, data_2017, data_2018))
df_combined
colnames(df_combined) <- c('2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018')
df_combined$month <- c('01','02','03','04','05','06','07','08','09','10','11','12')
### season combine
# function get Seasonal Average
## param : season data (data frame)
## return : vector
getSeasonalAvg <- function(season) {
season_avg <- c()
for(i in c(1:11)) {
season_avg <- c(season_avg, round(mean(as.numeric(season[,i])), 0))
}
return(season_avg)
}
spring <- subset(df_combined, df_combined$month %in% c('03', '04', '05'))
spring
spring_avg <- getSeasonalAvg(spring)
sprint_avg
spring_avg
spring <- subset(df_combined, df_combined$month %in% c('03', '04', '05'))
summer <- subset(df_combined, df_combined$month %in% c('06', '07', '08'))
fall <- subset(df_combined, df_combined$month %in% c('09', '10', '11'))
winter <- subset(df_combined, df_combined$month %in% c('12', '01', '02'))
df_season <- data.frame(spring = getSeasonalAvg(spring), summer = getSeasonalAvg(summer), fall = getSeasonalAvg(fall), winter = getSeasonalAvg(winter))
df_season
rownames(df_season) <- c('2008', '2009', '2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018')
df_season
